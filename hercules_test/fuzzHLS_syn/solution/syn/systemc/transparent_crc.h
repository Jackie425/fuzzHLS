// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _transparent_crc_HH_
#define _transparent_crc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct transparent_crc : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > val_r;
    sc_in< sc_lv<32> > crc32_context_i;
    sc_out< sc_lv<32> > crc32_context_o;
    sc_out< sc_logic > crc32_context_o_ap_vld;
    sc_out< sc_lv<8> > crc32_tab_address0;
    sc_out< sc_logic > crc32_tab_ce0;
    sc_in< sc_lv<32> > crc32_tab_q0;


    // Module declarations
    transparent_crc(sc_module_name name);
    SC_HAS_PROCESS(transparent_crc);

    ~transparent_crc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_107;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<24> > lshr_ln_reg_560;
    sc_signal< sc_lv<1> > tmp_reg_570;
    sc_signal< sc_lv<24> > lshr_ln72_1_reg_580;
    sc_signal< sc_lv<24> > lshr_ln72_2_reg_590;
    sc_signal< sc_lv<24> > lshr_ln72_3_reg_600;
    sc_signal< sc_lv<8> > select_ln103_fu_348_p3;
    sc_signal< sc_lv<8> > select_ln103_reg_605;
    sc_signal< sc_lv<24> > lshr_ln72_4_reg_617;
    sc_signal< sc_lv<24> > lshr_ln72_5_reg_627;
    sc_signal< sc_lv<32> > xor_ln72_11_fu_467_p2;
    sc_signal< sc_lv<32> > xor_ln72_11_reg_637;
    sc_signal< sc_lv<64> > zext_ln72_fu_139_p1;
    sc_signal< sc_lv<64> > zext_ln72_1_fu_186_p1;
    sc_signal< sc_lv<64> > zext_ln72_2_fu_245_p1;
    sc_signal< sc_lv<64> > zext_ln72_3_fu_304_p1;
    sc_signal< sc_lv<64> > zext_ln72_4_fu_361_p1;
    sc_signal< sc_lv<64> > zext_ln72_5_fu_410_p1;
    sc_signal< sc_lv<64> > zext_ln72_6_fu_459_p1;
    sc_signal< sc_lv<64> > zext_ln72_7_fu_498_p1;
    sc_signal< sc_lv<32> > xor_ln72_15_fu_536_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > trunc_ln72_fu_119_p1;
    sc_signal< sc_lv<8> > trunc_ln99_fu_111_p1;
    sc_signal< sc_lv<8> > xor_ln72_fu_133_p2;
    sc_signal< sc_lv<8> > trunc_ln72_2_fu_161_p1;
    sc_signal< sc_lv<8> > trunc_ln72_1_fu_152_p4;
    sc_signal< sc_lv<8> > xor_ln100_fu_165_p2;
    sc_signal< sc_lv<8> > b_assign_1_fu_171_p4;
    sc_signal< sc_lv<8> > xor_ln72_2_fu_180_p2;
    sc_signal< sc_lv<32> > zext_ln72_8_fu_191_p1;
    sc_signal< sc_lv<32> > xor_ln72_1_fu_194_p2;
    sc_signal< sc_lv<8> > trunc_ln72_4_fu_220_p1;
    sc_signal< sc_lv<8> > trunc_ln72_3_fu_210_p4;
    sc_signal< sc_lv<8> > xor_ln101_fu_224_p2;
    sc_signal< sc_lv<8> > b_assign_2_fu_230_p4;
    sc_signal< sc_lv<8> > xor_ln72_4_fu_239_p2;
    sc_signal< sc_lv<32> > zext_ln72_9_fu_250_p1;
    sc_signal< sc_lv<32> > xor_ln72_3_fu_253_p2;
    sc_signal< sc_lv<8> > trunc_ln72_6_fu_279_p1;
    sc_signal< sc_lv<8> > trunc_ln72_5_fu_269_p4;
    sc_signal< sc_lv<8> > xor_ln102_fu_283_p2;
    sc_signal< sc_lv<8> > b_assign_3_fu_289_p4;
    sc_signal< sc_lv<8> > xor_ln72_6_fu_298_p2;
    sc_signal< sc_lv<32> > zext_ln72_10_fu_309_p1;
    sc_signal< sc_lv<32> > xor_ln72_5_fu_312_p2;
    sc_signal< sc_lv<8> > trunc_ln72_8_fu_338_p1;
    sc_signal< sc_lv<8> > trunc_ln72_7_fu_328_p4;
    sc_signal< sc_lv<8> > xor_ln103_fu_342_p2;
    sc_signal< sc_lv<8> > xor_ln72_8_fu_355_p2;
    sc_signal< sc_lv<32> > zext_ln72_11_fu_366_p1;
    sc_signal< sc_lv<32> > xor_ln72_7_fu_369_p2;
    sc_signal< sc_lv<8> > trunc_ln72_11_fu_395_p1;
    sc_signal< sc_lv<8> > trunc_ln72_9_fu_385_p4;
    sc_signal< sc_lv<8> > xor_ln104_fu_399_p2;
    sc_signal< sc_lv<8> > xor_ln72_10_fu_405_p2;
    sc_signal< sc_lv<32> > zext_ln72_12_fu_415_p1;
    sc_signal< sc_lv<32> > xor_ln72_9_fu_418_p2;
    sc_signal< sc_lv<8> > trunc_ln72_13_fu_444_p1;
    sc_signal< sc_lv<8> > trunc_ln72_s_fu_434_p4;
    sc_signal< sc_lv<8> > xor_ln105_fu_448_p2;
    sc_signal< sc_lv<8> > xor_ln72_12_fu_454_p2;
    sc_signal< sc_lv<32> > zext_ln72_13_fu_464_p1;
    sc_signal< sc_lv<8> > trunc_ln72_14_fu_483_p1;
    sc_signal< sc_lv<8> > trunc_ln72_10_fu_473_p4;
    sc_signal< sc_lv<8> > xor_ln106_fu_487_p2;
    sc_signal< sc_lv<8> > xor_ln72_14_fu_493_p2;
    sc_signal< sc_lv<24> > lshr_ln72_6_fu_503_p4;
    sc_signal< sc_lv<32> > zext_ln72_14_fu_512_p1;
    sc_signal< sc_lv<32> > xor_ln72_13_fu_516_p2;
    sc_signal< sc_lv<24> > lshr_ln72_7_fu_522_p4;
    sc_signal< sc_lv<32> > zext_ln72_15_fu_532_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_assign_1_fu_171_p4();
    void thread_b_assign_2_fu_230_p4();
    void thread_b_assign_3_fu_289_p4();
    void thread_crc32_context_o();
    void thread_crc32_context_o_ap_vld();
    void thread_crc32_tab_address0();
    void thread_crc32_tab_ce0();
    void thread_lshr_ln72_6_fu_503_p4();
    void thread_lshr_ln72_7_fu_522_p4();
    void thread_select_ln103_fu_348_p3();
    void thread_trunc_ln72_10_fu_473_p4();
    void thread_trunc_ln72_11_fu_395_p1();
    void thread_trunc_ln72_13_fu_444_p1();
    void thread_trunc_ln72_14_fu_483_p1();
    void thread_trunc_ln72_1_fu_152_p4();
    void thread_trunc_ln72_2_fu_161_p1();
    void thread_trunc_ln72_3_fu_210_p4();
    void thread_trunc_ln72_4_fu_220_p1();
    void thread_trunc_ln72_5_fu_269_p4();
    void thread_trunc_ln72_6_fu_279_p1();
    void thread_trunc_ln72_7_fu_328_p4();
    void thread_trunc_ln72_8_fu_338_p1();
    void thread_trunc_ln72_9_fu_385_p4();
    void thread_trunc_ln72_fu_119_p1();
    void thread_trunc_ln72_s_fu_434_p4();
    void thread_trunc_ln99_fu_111_p1();
    void thread_xor_ln100_fu_165_p2();
    void thread_xor_ln101_fu_224_p2();
    void thread_xor_ln102_fu_283_p2();
    void thread_xor_ln103_fu_342_p2();
    void thread_xor_ln104_fu_399_p2();
    void thread_xor_ln105_fu_448_p2();
    void thread_xor_ln106_fu_487_p2();
    void thread_xor_ln72_10_fu_405_p2();
    void thread_xor_ln72_11_fu_467_p2();
    void thread_xor_ln72_12_fu_454_p2();
    void thread_xor_ln72_13_fu_516_p2();
    void thread_xor_ln72_14_fu_493_p2();
    void thread_xor_ln72_15_fu_536_p2();
    void thread_xor_ln72_1_fu_194_p2();
    void thread_xor_ln72_2_fu_180_p2();
    void thread_xor_ln72_3_fu_253_p2();
    void thread_xor_ln72_4_fu_239_p2();
    void thread_xor_ln72_5_fu_312_p2();
    void thread_xor_ln72_6_fu_298_p2();
    void thread_xor_ln72_7_fu_369_p2();
    void thread_xor_ln72_8_fu_355_p2();
    void thread_xor_ln72_9_fu_418_p2();
    void thread_xor_ln72_fu_133_p2();
    void thread_zext_ln72_10_fu_309_p1();
    void thread_zext_ln72_11_fu_366_p1();
    void thread_zext_ln72_12_fu_415_p1();
    void thread_zext_ln72_13_fu_464_p1();
    void thread_zext_ln72_14_fu_512_p1();
    void thread_zext_ln72_15_fu_532_p1();
    void thread_zext_ln72_1_fu_186_p1();
    void thread_zext_ln72_2_fu_245_p1();
    void thread_zext_ln72_3_fu_304_p1();
    void thread_zext_ln72_4_fu_361_p1();
    void thread_zext_ln72_5_fu_410_p1();
    void thread_zext_ln72_6_fu_459_p1();
    void thread_zext_ln72_7_fu_498_p1();
    void thread_zext_ln72_8_fu_191_p1();
    void thread_zext_ln72_9_fu_250_p1();
    void thread_zext_ln72_fu_139_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
