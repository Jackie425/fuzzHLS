// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hls_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hls_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> hls_top::ap_ST_fsm_state1 = "1";
const sc_lv<16> hls_top::ap_ST_fsm_state2 = "10";
const sc_lv<16> hls_top::ap_ST_fsm_state3 = "100";
const sc_lv<16> hls_top::ap_ST_fsm_state4 = "1000";
const sc_lv<16> hls_top::ap_ST_fsm_state5 = "10000";
const sc_lv<16> hls_top::ap_ST_fsm_state6 = "100000";
const sc_lv<16> hls_top::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> hls_top::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> hls_top::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> hls_top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> hls_top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> hls_top::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> hls_top::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> hls_top::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> hls_top::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> hls_top::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> hls_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> hls_top::ap_const_lv32_1 = "1";
const sc_lv<32> hls_top::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<1> hls_top::ap_const_lv1_1 = "1";
const sc_lv<32> hls_top::ap_const_lv32_2 = "10";
const sc_lv<1> hls_top::ap_const_lv1_0 = "0";
const sc_lv<32> hls_top::ap_const_lv32_3 = "11";
const sc_lv<32> hls_top::ap_const_lv32_4 = "100";
const sc_lv<32> hls_top::ap_const_lv32_6 = "110";
const sc_lv<32> hls_top::ap_const_lv32_7 = "111";
const sc_lv<32> hls_top::ap_const_lv32_B = "1011";
const sc_lv<32> hls_top::ap_const_lv32_C = "1100";
const sc_lv<9> hls_top::ap_const_lv9_0 = "000000000";
const sc_lv<4> hls_top::ap_const_lv4_8 = "1000";
const sc_lv<2> hls_top::ap_const_lv2_1 = "1";
const sc_lv<4> hls_top::ap_const_lv4_0 = "0000";
const sc_lv<32> hls_top::ap_const_lv32_A = "1010";
const sc_lv<32> hls_top::ap_const_lv32_D = "1101";
const sc_lv<32> hls_top::ap_const_lv32_9 = "1001";
const sc_lv<32> hls_top::ap_const_lv32_8 = "1000";
const sc_lv<32> hls_top::ap_const_lv32_E = "1110";
const sc_lv<32> hls_top::ap_const_lv32_5 = "101";
const sc_lv<32> hls_top::ap_const_lv32_F = "1111";
const sc_lv<32> hls_top::ap_const_lv32_264D9248 = "100110010011011001001001001000";
const sc_lv<3> hls_top::ap_const_lv3_3 = "11";
const sc_lv<9> hls_top::ap_const_lv9_100 = "100000000";
const sc_lv<9> hls_top::ap_const_lv9_1 = "1";
const sc_lv<32> hls_top::ap_const_lv32_1E = "11110";
const sc_lv<31> hls_top::ap_const_lv31_1 = "1";
const sc_lv<30> hls_top::ap_const_lv30_0 = "000000000000000000000000000000";
const sc_lv<32> hls_top::ap_const_lv32_1F = "11111";
const sc_lv<32> hls_top::ap_const_lv32_EDB88320 = "11101101101110001000001100100000";
const sc_lv<4> hls_top::ap_const_lv4_F = "1111";
const sc_lv<2> hls_top::ap_const_lv2_3 = "11";
const sc_lv<4> hls_top::ap_const_lv4_1 = "1";
const bool hls_top::ap_const_boolean_1 = true;

hls_top::hls_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    crc32_tab_U = new hls_top_crc32_tab("crc32_tab_U");
    crc32_tab_U->clk(ap_clk);
    crc32_tab_U->reset(ap_rst);
    crc32_tab_U->address0(crc32_tab_address0);
    crc32_tab_U->ce0(crc32_tab_ce0);
    crc32_tab_U->we0(crc32_tab_we0);
    crc32_tab_U->d0(crc_0_i_reg_132);
    crc32_tab_U->q0(crc32_tab_q0);
    g_5_U = new hls_top_g_5("g_5_U");
    g_5_U->clk(ap_clk);
    g_5_U->reset(ap_rst);
    g_5_U->address0(g_5_address0);
    g_5_U->ce0(g_5_ce0);
    g_5_U->q0(g_5_q0);
    grp_transparent_crc_fu_165 = new transparent_crc("grp_transparent_crc_fu_165");
    grp_transparent_crc_fu_165->ap_clk(ap_clk);
    grp_transparent_crc_fu_165->ap_rst(ap_rst);
    grp_transparent_crc_fu_165->ap_start(grp_transparent_crc_fu_165_ap_start);
    grp_transparent_crc_fu_165->ap_done(grp_transparent_crc_fu_165_ap_done);
    grp_transparent_crc_fu_165->ap_idle(grp_transparent_crc_fu_165_ap_idle);
    grp_transparent_crc_fu_165->ap_ready(grp_transparent_crc_fu_165_ap_ready);
    grp_transparent_crc_fu_165->val_r(grp_transparent_crc_fu_165_val_r);
    grp_transparent_crc_fu_165->crc32_context_i(crc32_context);
    grp_transparent_crc_fu_165->crc32_context_o(grp_transparent_crc_fu_165_crc32_context_o);
    grp_transparent_crc_fu_165->crc32_context_o_ap_vld(grp_transparent_crc_fu_165_crc32_context_o_ap_vld);
    grp_transparent_crc_fu_165->crc32_tab_address0(grp_transparent_crc_fu_165_crc32_tab_address0);
    grp_transparent_crc_fu_165->crc32_tab_ce0(grp_transparent_crc_fu_165_crc32_tab_ce0);
    grp_transparent_crc_fu_165->crc32_tab_q0(crc32_tab_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln44_fu_364_p2);
    sensitive << ( storemerge_i_reg_142 );

    SC_METHOD(thread_add_ln48_fu_334_p2);
    sensitive << ( g_3 );
    sensitive << ( checksum_hercules );

    SC_METHOD(thread_add_ln49_fu_220_p2);
    sensitive << ( trunc_ln937_fu_206_p1 );

    SC_METHOD(thread_add_ln52_fu_349_p2);
    sensitive << ( checksum_hercules );
    sensitive << ( l_18_reg_453 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_return);
    sensitive << ( checksum_hercules );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( xor_ln250_fu_391_p2 );

    SC_METHOD(thread_crc32_tab_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_transparent_crc_fu_165_crc32_tab_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln66_fu_291_p1 );

    SC_METHOD(thread_crc32_tab_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_transparent_crc_fu_165_crc32_tab_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_crc32_tab_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln59_fu_247_p2 );

    SC_METHOD(thread_crc_1_fu_253_p4);
    sensitive << ( crc_0_i_reg_132 );

    SC_METHOD(thread_crc_2_fu_263_p1);
    sensitive << ( crc_1_fu_253_p4 );

    SC_METHOD(thread_crc_3_fu_267_p2);
    sensitive << ( crc_2_fu_263_p1 );

    SC_METHOD(thread_crc_4_fu_277_p3);
    sensitive << ( crc_2_fu_263_p1 );
    sensitive << ( trunc_ln59_fu_273_p1 );
    sensitive << ( crc_3_fu_267_p2 );

    SC_METHOD(thread_g_5_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln245_fu_382_p1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_g_5_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_transparent_crc_fu_165_ap_start);
    sensitive << ( grp_transparent_crc_fu_165_ap_start_reg );

    SC_METHOD(thread_grp_transparent_crc_fu_165_val_r);
    sensitive << ( g_3_load_reg_464 );
    sensitive << ( g_5_load_reg_482 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_i_1_fu_196_p2);
    sensitive << ( crc_reg_109 );

    SC_METHOD(thread_i_fu_376_p2);
    sensitive << ( i_0_reg_154 );

    SC_METHOD(thread_icmp_ln243_fu_370_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_0_reg_154 );

    SC_METHOD(thread_icmp_ln49_fu_236_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln57_fu_190_p2 );
    sensitive << ( tmp_fu_226_p4 );

    SC_METHOD(thread_icmp_ln51_fu_314_p2);
    sensitive << ( trunc_ln2_reg_423 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_296_p3 );
    sensitive << ( zext_ln51_fu_310_p1 );

    SC_METHOD(thread_icmp_ln57_fu_190_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( crc_reg_109 );

    SC_METHOD(thread_icmp_ln59_fu_247_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_i_reg_121 );

    SC_METHOD(thread_j_fu_285_p2);
    sensitive << ( j_0_i_reg_121 );

    SC_METHOD(thread_l_18_fu_346_p1);
    sensitive << ( icmp_ln51_reg_448 );

    SC_METHOD(thread_tmp_1_fu_296_p3);
    sensitive << ( storemerge_i_reg_142 );

    SC_METHOD(thread_tmp_fu_226_p4);
    sensitive << ( add_ln49_fu_220_p2 );

    SC_METHOD(thread_trunc_ln59_fu_273_p1);
    sensitive << ( crc_0_i_reg_132 );

    SC_METHOD(thread_trunc_ln937_fu_206_p1);
    sensitive << ( g_6 );

    SC_METHOD(thread_xor_ln250_fu_391_p2);
    sensitive << ( crc32_context );

    SC_METHOD(thread_zext_ln245_fu_382_p1);
    sensitive << ( i_0_reg_154 );

    SC_METHOD(thread_zext_ln51_fu_310_p1);
    sensitive << ( storemerge_i_reg_142 );

    SC_METHOD(thread_zext_ln58_fu_186_p1);
    sensitive << ( crc_reg_109 );

    SC_METHOD(thread_zext_ln66_fu_291_p1);
    sensitive << ( crc_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln57_fu_190_p2 );
    sensitive << ( icmp_ln49_reg_428 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln59_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_296_p3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln243_fu_370_p2 );
    sensitive << ( grp_transparent_crc_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000001";
    g_6 = "01100111111110001011010011011111";
    g_3 = "00000000000000000000000000000001";
    checksum_hercules = "00000000000000000000000000000000";
    crc32_context = "11111111111111111111111111111111";
    grp_transparent_crc_fu_165_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, g_6, "g_6");
    sc_trace(mVcdFile, crc32_tab_address0, "crc32_tab_address0");
    sc_trace(mVcdFile, crc32_tab_ce0, "crc32_tab_ce0");
    sc_trace(mVcdFile, crc32_tab_we0, "crc32_tab_we0");
    sc_trace(mVcdFile, crc32_tab_q0, "crc32_tab_q0");
    sc_trace(mVcdFile, g_3, "g_3");
    sc_trace(mVcdFile, checksum_hercules, "checksum_hercules");
    sc_trace(mVcdFile, crc32_context, "crc32_context");
    sc_trace(mVcdFile, g_5_address0, "g_5_address0");
    sc_trace(mVcdFile, g_5_ce0, "g_5_ce0");
    sc_trace(mVcdFile, g_5_q0, "g_5_q0");
    sc_trace(mVcdFile, zext_ln58_fu_186_p1, "zext_ln58_fu_186_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_196_p2, "i_1_fu_196_p2");
    sc_trace(mVcdFile, i_1_reg_411, "i_1_reg_411");
    sc_trace(mVcdFile, trunc_ln2_reg_423, "trunc_ln2_reg_423");
    sc_trace(mVcdFile, icmp_ln57_fu_190_p2, "icmp_ln57_fu_190_p2");
    sc_trace(mVcdFile, icmp_ln49_fu_236_p2, "icmp_ln49_fu_236_p2");
    sc_trace(mVcdFile, icmp_ln49_reg_428, "icmp_ln49_reg_428");
    sc_trace(mVcdFile, crc_4_fu_277_p3, "crc_4_fu_277_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln59_fu_247_p2, "icmp_ln59_fu_247_p2");
    sc_trace(mVcdFile, j_fu_285_p2, "j_fu_285_p2");
    sc_trace(mVcdFile, icmp_ln51_fu_314_p2, "icmp_ln51_fu_314_p2");
    sc_trace(mVcdFile, icmp_ln51_reg_448, "icmp_ln51_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_1_fu_296_p3, "tmp_1_fu_296_p3");
    sc_trace(mVcdFile, l_18_fu_346_p1, "l_18_fu_346_p1");
    sc_trace(mVcdFile, l_18_reg_453, "l_18_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln44_fu_364_p2, "add_ln44_fu_364_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, g_3_load_reg_464, "g_3_load_reg_464");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_fu_376_p2, "i_fu_376_p2");
    sc_trace(mVcdFile, i_reg_472, "i_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln243_fu_370_p2, "icmp_ln243_fu_370_p2");
    sc_trace(mVcdFile, g_5_load_reg_482, "g_5_load_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_ap_start, "grp_transparent_crc_fu_165_ap_start");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_ap_done, "grp_transparent_crc_fu_165_ap_done");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_ap_idle, "grp_transparent_crc_fu_165_ap_idle");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_ap_ready, "grp_transparent_crc_fu_165_ap_ready");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_val_r, "grp_transparent_crc_fu_165_val_r");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_crc32_context_o, "grp_transparent_crc_fu_165_crc32_context_o");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_crc32_context_o_ap_vld, "grp_transparent_crc_fu_165_crc32_context_o_ap_vld");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_crc32_tab_address0, "grp_transparent_crc_fu_165_crc32_tab_address0");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_crc32_tab_ce0, "grp_transparent_crc_fu_165_crc32_tab_ce0");
    sc_trace(mVcdFile, crc_reg_109, "crc_reg_109");
    sc_trace(mVcdFile, j_0_i_reg_121, "j_0_i_reg_121");
    sc_trace(mVcdFile, crc_0_i_reg_132, "crc_0_i_reg_132");
    sc_trace(mVcdFile, storemerge_i_reg_142, "storemerge_i_reg_142");
    sc_trace(mVcdFile, i_0_reg_154, "i_0_reg_154");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_transparent_crc_fu_165_ap_start_reg, "grp_transparent_crc_fu_165_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, zext_ln66_fu_291_p1, "zext_ln66_fu_291_p1");
    sc_trace(mVcdFile, zext_ln245_fu_382_p1, "zext_ln245_fu_382_p1");
    sc_trace(mVcdFile, add_ln48_fu_334_p2, "add_ln48_fu_334_p2");
    sc_trace(mVcdFile, add_ln52_fu_349_p2, "add_ln52_fu_349_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, l_18_1_fu_78, "l_18_1_fu_78");
    sc_trace(mVcdFile, trunc_ln937_fu_206_p1, "trunc_ln937_fu_206_p1");
    sc_trace(mVcdFile, add_ln49_fu_220_p2, "add_ln49_fu_220_p2");
    sc_trace(mVcdFile, tmp_fu_226_p4, "tmp_fu_226_p4");
    sc_trace(mVcdFile, crc_1_fu_253_p4, "crc_1_fu_253_p4");
    sc_trace(mVcdFile, crc_2_fu_263_p1, "crc_2_fu_263_p1");
    sc_trace(mVcdFile, trunc_ln59_fu_273_p1, "trunc_ln59_fu_273_p1");
    sc_trace(mVcdFile, crc_3_fu_267_p2, "crc_3_fu_267_p2");
    sc_trace(mVcdFile, zext_ln51_fu_310_p1, "zext_ln51_fu_310_p1");
    sc_trace(mVcdFile, xor_ln250_fu_391_p2, "xor_ln250_fu_391_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("hls_top.hdltvin.dat");
    mHdltvoutHandle.open("hls_top.hdltvout.dat");
}

hls_top::~hls_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete crc32_tab_U;
    delete g_5_U;
    delete grp_transparent_crc_fu_165;
}

void hls_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        checksum_hercules = add_ln52_fu_349_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        checksum_hercules = add_ln48_fu_334_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln57_fu_190_p2.read(), ap_const_lv1_0))) {
        crc_0_i_reg_132 = zext_ln58_fu_186_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln59_fu_247_p2.read(), ap_const_lv1_0))) {
        crc_0_i_reg_132 = crc_4_fu_277_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln59_fu_247_p2.read()))) {
        crc_reg_109 = i_1_reg_411.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        crc_reg_109 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_296_p3.read())) {
            g_3 = l_18_1_fu_78.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_296_p3.read())) {
            g_3 = g_3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_transparent_crc_fu_165_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln243_fu_370_p2.read())))) {
            grp_transparent_crc_fu_165_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_transparent_crc_fu_165_ap_ready.read())) {
            grp_transparent_crc_fu_165_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(grp_transparent_crc_fu_165_ap_done.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            i_0_reg_154 = i_reg_472.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            i_0_reg_154 = ap_const_lv4_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln57_fu_190_p2.read(), ap_const_lv1_0))) {
        j_0_i_reg_121 = ap_const_lv4_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln59_fu_247_p2.read(), ap_const_lv1_0))) {
        j_0_i_reg_121 = j_fu_285_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        l_18_1_fu_78 = l_18_reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln57_fu_190_p2.read(), ap_const_lv1_1))) {
        l_18_1_fu_78 = ap_const_lv32_264D9248;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln57_fu_190_p2.read(), ap_const_lv1_1))) {
        storemerge_i_reg_142 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_reg_428.read(), ap_const_lv1_0))) {
        storemerge_i_reg_142 = add_ln44_fu_364_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, grp_transparent_crc_fu_165_crc32_context_o_ap_vld.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, grp_transparent_crc_fu_165_crc32_context_o_ap_vld.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, grp_transparent_crc_fu_165_crc32_context_o_ap_vld.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, grp_transparent_crc_fu_165_crc32_context_o_ap_vld.read())))) {
        crc32_context = grp_transparent_crc_fu_165_crc32_context_o.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        g_3_load_reg_464 = g_3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        g_5_load_reg_482 = g_5_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_296_p3.read()))) {
        g_6 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_411 = i_1_fu_196_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_reg_472 = i_fu_376_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln57_fu_190_p2.read(), ap_const_lv1_1))) {
        icmp_ln49_reg_428 = icmp_ln49_fu_236_p2.read();
        trunc_ln2_reg_423 = g_6.read().range(30, 5);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_296_p3.read()))) {
        icmp_ln51_reg_448 = icmp_ln51_fu_314_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        l_18_reg_453 = l_18_fu_346_p1.read();
    }
}

void hls_top::thread_add_ln44_fu_364_p2() {
    add_ln44_fu_364_p2 = (!storemerge_i_reg_142.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(storemerge_i_reg_142.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void hls_top::thread_add_ln48_fu_334_p2() {
    add_ln48_fu_334_p2 = (!checksum_hercules.read().is_01() || !g_3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(checksum_hercules.read()) + sc_biguint<32>(g_3.read()));
}

void hls_top::thread_add_ln49_fu_220_p2() {
    add_ln49_fu_220_p2 = (!ap_const_lv31_1.is_01() || !trunc_ln937_fu_206_p1.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(trunc_ln937_fu_206_p1.read()));
}

void hls_top::thread_add_ln52_fu_349_p2() {
    add_ln52_fu_349_p2 = (!checksum_hercules.read().is_01() || !l_18_reg_453.read().is_01())? sc_lv<32>(): (sc_biguint<32>(checksum_hercules.read()) + sc_biguint<32>(l_18_reg_453.read()));
}

void hls_top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void hls_top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void hls_top::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void hls_top::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void hls_top::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void hls_top::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void hls_top::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void hls_top::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void hls_top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void hls_top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void hls_top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void hls_top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void hls_top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void hls_top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void hls_top::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void hls_top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void hls_top::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void hls_top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void hls_top::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void hls_top::thread_ap_return() {
    ap_return = (!checksum_hercules.read().is_01() || !xor_ln250_fu_391_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(checksum_hercules.read()) + sc_biguint<32>(xor_ln250_fu_391_p2.read()));
}

void hls_top::thread_crc32_tab_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        crc32_tab_address0 =  (sc_lv<8>) (zext_ln66_fu_291_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        crc32_tab_address0 = grp_transparent_crc_fu_165_crc32_tab_address0.read();
    } else {
        crc32_tab_address0 = "XXXXXXXX";
    }
}

void hls_top::thread_crc32_tab_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        crc32_tab_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        crc32_tab_ce0 = grp_transparent_crc_fu_165_crc32_tab_ce0.read();
    } else {
        crc32_tab_ce0 = ap_const_logic_0;
    }
}

void hls_top::thread_crc32_tab_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln59_fu_247_p2.read()))) {
        crc32_tab_we0 = ap_const_logic_1;
    } else {
        crc32_tab_we0 = ap_const_logic_0;
    }
}

void hls_top::thread_crc_1_fu_253_p4() {
    crc_1_fu_253_p4 = crc_0_i_reg_132.read().range(31, 1);
}

void hls_top::thread_crc_2_fu_263_p1() {
    crc_2_fu_263_p1 = esl_zext<32,31>(crc_1_fu_253_p4.read());
}

void hls_top::thread_crc_3_fu_267_p2() {
    crc_3_fu_267_p2 = (crc_2_fu_263_p1.read() ^ ap_const_lv32_EDB88320);
}

void hls_top::thread_crc_4_fu_277_p3() {
    crc_4_fu_277_p3 = (!trunc_ln59_fu_273_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln59_fu_273_p1.read()[0].to_bool())? crc_3_fu_267_p2.read(): crc_2_fu_263_p1.read());
}

void hls_top::thread_g_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        g_5_address0 =  (sc_lv<3>) (zext_ln245_fu_382_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        g_5_address0 = ap_const_lv3_3;
    } else {
        g_5_address0 =  (sc_lv<3>) ("XXX");
    }
}

void hls_top::thread_g_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        g_5_ce0 = ap_const_logic_1;
    } else {
        g_5_ce0 = ap_const_logic_0;
    }
}

void hls_top::thread_grp_transparent_crc_fu_165_ap_start() {
    grp_transparent_crc_fu_165_ap_start = grp_transparent_crc_fu_165_ap_start_reg.read();
}

void hls_top::thread_grp_transparent_crc_fu_165_val_r() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_transparent_crc_fu_165_val_r = g_5_load_reg_482.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_transparent_crc_fu_165_val_r = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_transparent_crc_fu_165_val_r = ap_const_lv32_FFFFFFFF;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_transparent_crc_fu_165_val_r = g_3_load_reg_464.read();
    } else {
        grp_transparent_crc_fu_165_val_r =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void hls_top::thread_i_1_fu_196_p2() {
    i_1_fu_196_p2 = (!crc_reg_109.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(crc_reg_109.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void hls_top::thread_i_fu_376_p2() {
    i_fu_376_p2 = (!i_0_reg_154.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_154.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void hls_top::thread_icmp_ln243_fu_370_p2() {
    icmp_ln243_fu_370_p2 = (!i_0_reg_154.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_154.read() == ap_const_lv4_8);
}

void hls_top::thread_icmp_ln49_fu_236_p2() {
    icmp_ln49_fu_236_p2 = (!tmp_fu_226_p4.read().is_01() || !ap_const_lv30_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_226_p4.read() == ap_const_lv30_0);
}

void hls_top::thread_icmp_ln51_fu_314_p2() {
    icmp_ln51_fu_314_p2 = (!trunc_ln2_reg_423.read().is_01() || !zext_ln51_fu_310_p1.read().is_01())? sc_lv<1>(): (sc_biguint<26>(trunc_ln2_reg_423.read()) < sc_biguint<26>(zext_ln51_fu_310_p1.read()));
}

void hls_top::thread_icmp_ln57_fu_190_p2() {
    icmp_ln57_fu_190_p2 = (!crc_reg_109.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(crc_reg_109.read() == ap_const_lv9_100);
}

void hls_top::thread_icmp_ln59_fu_247_p2() {
    icmp_ln59_fu_247_p2 = (!j_0_i_reg_121.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_121.read() == ap_const_lv4_0);
}

void hls_top::thread_j_fu_285_p2() {
    j_fu_285_p2 = (!ap_const_lv4_F.is_01() || !j_0_i_reg_121.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_F) + sc_biguint<4>(j_0_i_reg_121.read()));
}

void hls_top::thread_l_18_fu_346_p1() {
    l_18_fu_346_p1 = esl_zext<32,1>(icmp_ln51_reg_448.read());
}

void hls_top::thread_tmp_1_fu_296_p3() {
    tmp_1_fu_296_p3 = storemerge_i_reg_142.read().range(1, 1);
}

void hls_top::thread_tmp_fu_226_p4() {
    tmp_fu_226_p4 = add_ln49_fu_220_p2.read().range(30, 1);
}

void hls_top::thread_trunc_ln59_fu_273_p1() {
    trunc_ln59_fu_273_p1 = crc_0_i_reg_132.read().range(1-1, 0);
}

void hls_top::thread_trunc_ln937_fu_206_p1() {
    trunc_ln937_fu_206_p1 = g_6.read().range(31-1, 0);
}

void hls_top::thread_xor_ln250_fu_391_p2() {
    xor_ln250_fu_391_p2 = (crc32_context.read() ^ ap_const_lv32_FFFFFFFF);
}

void hls_top::thread_zext_ln245_fu_382_p1() {
    zext_ln245_fu_382_p1 = esl_zext<64,4>(i_0_reg_154.read());
}

void hls_top::thread_zext_ln51_fu_310_p1() {
    zext_ln51_fu_310_p1 = esl_zext<26,2>(storemerge_i_reg_142.read());
}

void hls_top::thread_zext_ln58_fu_186_p1() {
    zext_ln58_fu_186_p1 = esl_zext<32,9>(crc_reg_109.read());
}

void hls_top::thread_zext_ln66_fu_291_p1() {
    zext_ln66_fu_291_p1 = esl_zext<64,9>(crc_reg_109.read());
}

void hls_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln57_fu_190_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln59_fu_247_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_296_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln49_reg_428.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_transparent_crc_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(grp_transparent_crc_fu_165_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln243_fu_370_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(grp_transparent_crc_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(grp_transparent_crc_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

void hls_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

